server:
  port: 8000
spring:
  application:
    name: yixue-gateway
  profiles:
    active: dev
  cloud:
    nacos:
      username: nacos
      password: nacos
      #注册中心
      discovery:
        server-addr: 1.12.236.238:8848
        #指定命名空间
        namespace: dev
      #配置中心
      config:
        server-addr: 1.12.236.238:8848
        #文件类型
        file-extension: yaml
        #指定分组
        group: dev
        #指定命名空间
        namespace: dev

    gateway:
      globalcors:
        # gateway 跨域设置
        cors-configurations:
          '[/**]':
            allowedOriginPatterns: "*"
            allowedHeaders: "*"
            allowCredentials: true
            allowedMethods:
              - GET
              - POST
              - PUT
              - OPTIONS
      # 设置与服务注册发现组件结合，这样可以采用服务名的路由策略
      discovery:
        locator:
          enabled: true
      # 配置路由规则
      routes:
        # 采用自定义路由 ID（有固定用法，不同的 id 有不同的功能，详见：https://cloud.spring.io/spring-cloud-gateway/2.0.x/single/spring-cloud-gateway.html#gateway-route-filters）
        - id: yixue-admin
          # 采用 LoadBalanceClient（负载均衡） 方式请求，以 lb://+服务名
          uri: lb://yixue-admin
          # Predicate 翻译过来是“谓词”的意思，必须，主要作用是匹配用户的请求，有很多种用法
          predicates:
            # 路径匹配，以 api 开头，直接配置是不生效的，看 filters 配置
            - Path= /yixue-admin/**
          filters:
            # 前缀过滤，默认配置下，我们的请求路径是 http://localhost:8888/business-oauth2/** 这时会路由到指定的服务
            # 此处配置去掉 1 个路径前缀，再配置上面的 Path=/api/**，就能按照 http://localhost:8888/api/** 的方式访问了
            - StripPrefix=1
#  main:
#    # 允许相同名称的bean覆盖
#    allow-bean-definition-overriding: true
